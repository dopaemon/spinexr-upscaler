# GENERATE TIME: Sat Mar  8 15:23:02 2025
# CMD:
# realesrgan/train.py -opt options/finetune_realesrgan_x4plus.yml --auto_resume

# general settings
name: ft_SpineXR_x4
model_type: RealESRGANModel
scale: 4
num_gpu: auto
manual_seed: 0

# ----------------- options for synthesizing training data in RealESRGANModel ----------------- #
# USM the ground-truth
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: False

# the first degradation process
resize_prob: [0.2, 0.7, 0.5] # up, down, keep
resize_range: [0.5, 1.5]
gaussian_noise_prob: 0.7 # Increased for X-ray noise
noise_range: [0.05, 0.2] # Adjusted for X-ray noise
poisson_scale_range: [0.1, 1.5] # Adjusted for X-ray noise
gray_noise_prob: 0.6 # Increased for X-ray noise
jpeg_range: [80, 100]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.3, 0.4, 0.3] # up, down, keep
resize_range2: [0.7, 1.2]
gaussian_noise_prob2: 0.7 # Increased for X-ray noise
noise_range2: [0.05, 0.2] # Adjusted for X-ray noise
poisson_scale_range2: [0.1, 1.5] # Adjusted for X-ray noise
gray_noise_prob2: 0.6 # Increased for X-ray noise
jpeg_range2: [80, 100]

gt_size: 128
queue_size: 180

# dataset and data loader settings
datasets:
  train:
    name: SpineXR
    type: RealESRGANDataset
    dataroot_gt: datasets/train_jpeg
    meta_info: datasets/meta_info/meta_info_spinexr.txt
    io_backend:
      type: disk

    blur_kernel_size: 21
    kernel_list:
      [
        "iso",
        "aniso",
        "generalized_iso",
        "generalized_aniso",
        "plateau_iso",
        "plateau_aniso",
      ]
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 21
    kernel_list2:
      [
        "iso",
        "aniso",
        "generalized_iso",
        "generalized_aniso",
        "plateau_iso",
        "plateau_aniso",
      ]
    kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.8

    gt_size: 128
    use_hflip: False
    use_rot: False # Enabled rotation for additional augmentation

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 12
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: experiments/pretrained_models/RealESRGAN_x4plus.pth
  param_key_g: params_ema
  strict_load_g: true
  pretrain_network_d: experiments/pretrained_models/RealESRGAN_x4plus_netD.pth
  param_key_d: params
  strict_load_d: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 5e-5 # Lower learning rate for fine-tuning
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 5e-5 # Lower learning rate for fine-tuning
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [2000, 4000, 6000, 8000, 10000, 12000, 14000, 16000, 18000]
    gamma: 0.8

  total_iter: 20000
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      "conv1_2": 0.2
      "conv2_2": 0.2
      "conv3_4": 1
      "conv4_4": 1
      "conv5_4": 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0 # Reduced perceptual weight
    style_weight: 0
    range_norm: false
    criterion: l1
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: lsgan
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1 # Adjusted GAN loss weight

  net_d_iters: 1
  net_d_init_iters: 0

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 8e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
